[tool.poetry]
name = "py-dsa"
version = "0.1.0"
description = "Repo for learning DSA with python"
authors = ["dezeat"]
license = "MIT"
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
pytest = "^8.3.3"
pydantic = "^2.9.2"

[tool.pytest]
pythonpath = ["."]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff.lint]
select = ["ALL"]
pydocstyle.convention = "google"
ignore = ["COM812", "ISC001", "S101", "ANN002", "ANN003", "ANN101", "FIX002", "TD003", "ANN102", "FA102"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.pylint]
max-args = 8

[tool.ruff.lint.per-file-ignores]
"tests/**.py" = ["ANN201", "D100", "D104", "SLF001", "PLR2004", "INP001"]

[tool.pytest.ini_options]
testpaths = [
    "tests",
]

[tool.ruff]
exclude = [
    "__builtins__.pyi",
]

[[tool.mypy.overrides]]
module = "yaml.*"
ignore_missing_imports = false
